#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * Recursively scans a directory for .md and .mdx files
 * @param {string} dirPath - Directory to scan
 * @param {string} basePath - Base path for relative file paths
 * @returns {Array} Array of file paths or nested group objects
 */
function scanDirectory(dirPath, basePath = '') {
  try {
    const items = fs.readdirSync(dirPath, { withFileTypes: true });
    const result = [];
    const files = [];
    const dirs = [];

    // Separate files and directories
    for (const item of items) {
      if (item.name.startsWith('.') || item.name.startsWith('_')) {
        continue; // Skip hidden/special files
      }

      if (item.isFile()) {
        if (item.name.endsWith('.mdx') || item.name.endsWith('.md')) {
          const fileName = item.name.replace(/\.(mdx|md)$/, '');
          const filePath = basePath ? `${basePath}/${fileName}` : fileName;
          files.push({ name: fileName, path: filePath, isIndex: fileName === 'index' });
        }
      } else if (item.isDirectory()) {
        dirs.push(item.name);
      }
    }

    // Sort files alphabetically, but put index first
    files.sort((a, b) => {
      if (a.isIndex && !b.isIndex) return -1;
      if (!a.isIndex && b.isIndex) return 1;
      return a.name.localeCompare(b.name);
    });

    // Add files to result
    for (const file of files) {
      result.push(file.path);
    }

    // Sort directories alphabetically
    dirs.sort();

    // Add subdirectories as groups
    for (const dir of dirs) {
      const subDirPath = path.join(dirPath, dir);
      const subBasePath = basePath ? `${basePath}/${dir}` : dir;
      const subItems = scanDirectory(subDirPath, subBasePath);
      
      if (subItems.length > 0) {
        // Convert directory name to proper label (handle kebab-case, etc.)
        const groupLabel = dir
          .split('-')
          .map(word => word.charAt(0).toUpperCase() + word.slice(1))
          .join(' ');
        
        result.push({
          group: groupLabel,
          pages: subItems
        });
      }
    }

    return result;
  } catch (error) {
    console.warn(`Warning: Could not scan directory ${dirPath}:`, error.message);
    return [];
  }
}

/**
 * Get autogenerated pages for all directories
 */
function getAutoPages() {
  const docsDir = path.join(__dirname, 'docs');
  const autoGenDirs = [
    'universal-gateway/examples',
    'traffic-policy/getting-started',
    'traffic-policy/concepts', 
    'traffic-policy/actions',
    'traffic-policy/variables',
    'traffic-policy/examples',
    'agent-sdks',
    'guides/device-gateway',
    'guides/identity-aware-proxy',
    'using-ngrok-with',
    'integrations'
  ];

  const results = {};

  for (const dirName of autoGenDirs) {
    const fullPath = path.join(docsDir, dirName);
    
    if (fs.existsSync(fullPath)) {
      const pages = scanDirectory(fullPath, dirName);
      results[dirName] = pages;
    } else {
      results[dirName] = [];
    }
  }

  return results;
}

/**
 * Build complete docs.json matching sidebar-example.js structure
 */
function buildCompleteDocsJson() {
  const autoPages = getAutoPages();
  
  // Root level pages
  const rootPages = [
    "overview/index",
    "what-is-ngrok",
    "how-ngrok-works", 
    "why-ngrok",
    "whats-new",
    "faq/faq"
  ];

  // Build the complete navigation structure exactly matching sidebar-example.js
  const groups = [
    // Pricing & Limits
    {
      "group": "Pricing & Limits",
      "pages": [
        "pricing-limits/index",
        "pricing-limits/free-plan-limits",
        "pricing-limits/traffic-policy-unit-pricing"
      ]
    },
    
    // Getting Started - major section
    {
      "group": "Getting Started",
      "pages": [
        "getting-started/index", // Overview page from the link
        {
          "group": "Agent CLI", 
          "pages": ["getting-started/index"]
        },
        {
          "group": "Cloud Endpoints",
          "pages": ["getting-started/cloud-endpoints-quickstart"]
        },
        {
          "group": "SDKs",
          "pages": [
            "getting-started/javascript",
            "getting-started/go", 
            "getting-started/python",
            "getting-started/rust"
          ]
        },
        {
          "group": "Kubernetes", 
          "pages": [
            "getting-started/kubernetes/ingress", // Overview from link
            "getting-started/kubernetes/ingress",
            "getting-started/kubernetes/gateway-api",
            "getting-started/kubernetes/crds", 
            "getting-started/kubernetes/endpoints"
          ]
        }
      ]
    },
    
    // Universal Gateway - major section
    {
      "group": "Universal Gateway",
      "pages": [
        "universal-gateway/overview", // Overview from link
        "universal-gateway/overview", // Listed again as first item
        {
          "group": "Concepts",
          "pages": [
            {
              "group": "Domains", 
              "pages": [
                "universal-gateway/domains", // Overview from link
                "universal-gateway/custom-domains"
              ]
            },
            "universal-gateway/tcp-addresses",
            "universal-gateway/tls-certificates",
            "universal-gateway/edges"
          ]
        },
        {
          "group": "Endpoints",
          "pages": [
            "universal-gateway/endpoints", // Overview from link 
            "universal-gateway/endpoints", // Listed as first item
            {
              "group": "Types",
              "pages": [
                "universal-gateway/types", // Overview from link
                {
                  "group": "Cloud Endpoints",
                  "pages": [
                    "universal-gateway/cloud-endpoints/index", // Overview from link
                    "universal-gateway/cloud-endpoints/change-domain-endpoint",
                    {
                      "group": "Forwarding Traffic",
                      "pages": [
                        "universal-gateway/cloud-endpoints/forwarding-and-load-balancing", // Overview from link
                        "universal-gateway/cloud-endpoints/routing-and-policy-decentralization"
                      ]
                    }
                  ]
                },
                "universal-gateway/agent-endpoints"
              ]
            },
            {
              "group": "Protocols", 
              "pages": [
                "universal-gateway/protocols", // Overview from link
                "universal-gateway/http",
                "universal-gateway/tls",
                "universal-gateway/tcp"
              ]
            },
            {
              "group": "Bindings",
              "pages": [
                "universal-gateway/bindings", // Overview from link
                "universal-gateway/public-endpoints",
                "universal-gateway/internal-endpoints",
                "universal-gateway/kubernetes-endpoints"
              ]
            },
            {
              "group": "Pooling",
              "pages": [
                "universal-gateway/endpoint-pooling", // Overview from link
                "universal-gateway/load-balancing-multiple-clouds"
              ]
            }
          ]
        },
        {
          "group": "Network", 
          "pages": [
            "universal-gateway/global-load-balancer", // Overview from link
            "universal-gateway/tls-termination",
            "universal-gateway/ddos-protection",
            "universal-gateway/ip-addresses",
            "universal-gateway/points-of-presence"
          ]
        },
        {
          "group": "Examples",
          "pages": [
            "universal-gateway/examples", // Overview from link
            ...autoPages['universal-gateway/examples']
          ]
        }
      ]
    },
    
    // Traffic Policy - major section
    {
      "group": "Traffic Policy", 
      "pages": [
        "traffic-policy/index", // Overview from link
        {
          "group": "Getting Started",
          "pages": autoPages['traffic-policy/getting-started']
        },
        {
          "group": "Concepts",
          "pages": autoPages['traffic-policy/concepts']
        },
        {
          "group": "Actions", 
          "pages": autoPages['traffic-policy/actions']
        },
        {
          "group": "Macros",
          "pages": ["traffic-policy/macros/index"]
        },
        {
          "group": "Secrets",
          "pages": ["traffic-policy/secrets"]
        },
        {
          "group": "Variables",
          "pages": autoPages['traffic-policy/variables']
        },
        {
          "group": "Resources",
          "pages": ["traffic-policy/identities"]
        },
        {
          "group": "Examples",
          "pages": autoPages['traffic-policy/examples']
        }
      ]
    },
    
    // Kubernetes - major section
    {
      "group": "Kubernetes",
      "pages": [
        "k8s/index", // Overview from link
        {
          "group": "How It Works",
          "pages": [
            "k8s/how-it-works", // Overview from link
            "k8s/installation/architecture"
          ]
        },
        "k8s/guides/local-cluster",
        {
          "group": "Quickstarts", 
          "pages": [
            "getting-started/kubernetes/ingress", // Overview from link
            "getting-started/kubernetes/ingress",
            "getting-started/kubernetes/gateway-api",
            "getting-started/kubernetes/crds",
            "getting-started/kubernetes/endpoints"
          ]
        },
        {
          "group": "Manage",
          "pages": [
            "k8s/installation/update", // Overview from link
            "k8s/installation/helm",
            "k8s/installation/uninstall"
          ]
        },
        {
          "group": "Load Balancing",
          "pages": [
            "k8s/load-balancing/load-balancing-kubernetes", // Overview from link
            "k8s/load-balancing/load-balancing-kubernetes-clusters",
            "k8s/guides/using-loadbalancers"
          ]
        },
        {
          "group": "Usage Guides",
          "pages": [
            "k8s/guides/using-crds", // Overview from link
            "k8s/guides/endpoint-types",
            "k8s/guides/bindings", 
            "k8s/guides/pooling",
            "k8s/guides/custom-domain",
            "k8s/guides/customer-networks",
            "k8s/guides/using-gwapi",
            "k8s/guides/using-ingresses",
            "k8s/guides/annotations",
            "k8s/guides/managed-resources",
            "k8s/guides/finalizers",
            "k8s/guides/troubleshooting",
            {
              "group": "How do I?",
              "pages": [
                "k8s/guides/how-to/request-routing", // Overview from link
                "k8s/guides/how-to/tls-routing",
                "k8s/guides/how-to/tcp-routing",
                "k8s/guides/how-to/manipulate-headers",
                "k8s/guides/how-to/redirects",
                "k8s/guides/how-to/rewrite-url",
                "k8s/guides/how-to/static-response", 
                "k8s/guides/how-to/terminate-tls",
                "k8s/guides/how-to/upstream-tls",
                "k8s/guides/how-to/rate-limiting",
                "k8s/guides/how-to/deny-requests",
                "k8s/guides/how-to/basic-auth",
                "k8s/guides/how-to/oauth",
                "k8s/guides/how-to/oidc",
                "k8s/guides/how-to/jwt-validation",
                "k8s/guides/how-to/restrict-ips",
                "k8s/guides/how-to/circuit-breaking",
                "k8s/guides/how-to/compress-response"
              ]
            }
          ]
        },
        {
          "group": "Custom Resources",
          "pages": [
            "k8s/crds/index", // Overview from link
            "k8s/crds/agentendpoint",
            "k8s/crds/cloudendpoint", 
            "k8s/crds/ngroktrafficpolicy",
            "k8s/crds/boundendpoint",
            "k8s/crds/domain",
            "k8s/crds/kubernetesoperator",
            "k8s/crds/tunnel"
          ]
        },
        {
          "group": "Integrations & Platforms",
          "pages": [
            "k8s/integrations/argo-cd", // Overview from link
            "k8s/integrations/aws-eks",
            "k8s/integrations/microsoft-entra-id",
            "k8s/integrations/azure-aks",
            "k8s/integrations/consul",
            "k8s/integrations/digital-ocean",
            "k8s/integrations/gke",
            "k8s/integrations/linkerd",
            "k8s/integrations/microk8s",
            "k8s/integrations/rancher",
            "k8s/integrations/rayfay", 
            "k8s/integrations/spectro-cloud",
            "k8s/integrations/vcluster"
          ]
        },
        "k8s/changelog",
        "k8s/releasing"
      ]
    },
    
    // Traffic Observability - major section
    {
      "group": "Traffic Observability",
      "pages": [
        "obs/index", // Overview from link
        "obs/traffic-inspection",
        {
          "group": "Events",
          "pages": [
            "obs/events/index", // Overview from link 
            "obs/events/reference"
          ]
        }
      ]
    },
    
    // Secure Tunnels - major section
    {
      "group": "Secure Tunnels", 
      "pages": [
        {
          "group": "Agent",
          "pages": [
            "agent/index", // Overview from link
            "agent/web-inspection-interface",
            "agent/cli",
            "agent/cli-api",
            {
              "group": "Configuration file",
              "pages": [
                "agent/config/index", // Overview from link
                "agent/config/v2",
                "agent/config/v3"
              ]
            },
            "agent/api",
            "agent/ssh-reverse-tunnel-agent",
            "agent/connect-url",
            {
              "group": "Agent TLS Termination",
              "pages": [
                "agent/agent-tls-termination", // Overview from link
                "agent/agent-mutual-tls-termination"
              ]
            },
            "agent/changelog",
            "agent/version-support-policy", 
            "agent/diagnose",
            "agent/upgrade-v2-v3"
          ]
        },
        {
          "group": "Agent SDKs",
          "pages": [
            "agent-sdks/index", // Overview from link  
            ...autoPages['agent-sdks']
          ]
        }
      ]
    },
    
    // Identity & Access - major section
    {
      "group": "Identity & Access",
      "pages": [
        "iam/index", // Overview from link
        {
          "group": "Principals",
          "pages": [
            "iam/users", // Overview from link
            "iam/service-users"
          ]
        },
        {
          "group": "Account Governance", 
          "pages": [
            "iam/sso", // Overview from link
            "iam/rbac",
            "iam/domain-controls"
          ]
        }
      ]
    },
    
    // API - major section  
    {
      "group": "API",
      "pages": [
        "api/index", // Overview from link
        {
          "group": "API Reference",
          "pages": [
            "api/reference",
            {
              "group": "Universal Gateway",
              "pages": [
                "api/resources/endpoints",
                "api/resources/reserved-addrs",
                "api/resources/reserved-domains",
                "api/resources/tls-certificates", 
                "api/resources/kubernetes-operators",
                {
                  "group": "Edges",
                  "pages": [
                    {
                      "group": "HTTPS Edges",
                      "pages": [
                        "api/resources/edges-https",
                        "api/resources/edges-https-routes",
                        "api/resources/https-edge-mutual-tls-module",
                        "api/resources/edge-route-backend-module",
                        "api/resources/edge-route-circuit-breaker-module",
                        "api/resources/edge-route-compression-module",
                        "api/resources/edge-route-ip-restriction-module",
                        "api/resources/edge-route-o-auth-module",
                        "api/resources/edge-route-oidc-module", 
                        "api/resources/edge-route-request-headers-module",
                        "api/resources/edge-route-response-headers-module",
                        "api/resources/edge-route-saml-module",
                        "api/resources/edge-route-traffic-policy-module",
                        "api/resources/edge-route-user-agent-filter-module",
                        "api/resources/edge-route-webhook-verification-module",
                        "api/resources/edge-route-websocket-tcp-converter-module",
                        "api/resources/https-edge-tls-termination-module"
                      ]
                    },
                    {
                      "group": "TCP Edges",
                      "pages": [
                        "api/resources/edges-tcp",
                        "api/resources/tcp-edge-backend-module",
                        "api/resources/tcp-edge-ip-restriction-module",
                        "api/resources/tcp-edge-traffic-policy-module"
                      ]
                    },
                    {
                      "group": "TLS Edges",
                      "pages": [
                        "api/resources/edges-tls",
                        "api/resources/tls-edge-backend-module",
                        "api/resources/tls-edge-ip-restriction-module",
                        "api/resources/tls-edge-mutual-tls-module",
                        "api/resources/tls-edge-tls-termination-module",
                        "api/resources/tls-edge-traffic-policy-module"
                      ]
                    },
                    {
                      "group": "Backends", 
                      "pages": [
                        "api/resources/failover-backends",
                        "api/resources/http-response-backends",
                        "api/resources/tunnel-group-backends",
                        "api/resources/weighted-backends"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "group": "Traffic Policy",
              "pages": [
                "api/resources/certificate-authorities",
                "api/resources/ip-policies",
                "api/resources/ip-policy-rules",
                "api/resources/application-users",
                "api/resources/application-sessions"
              ]
            },
            {
              "group": "Secure Tunnels",
              "pages": [
                "api/resources/agent-ingresses",
                "api/resources/tunnels", 
                "api/resources/tunnel-sessions"
              ]
            },
            {
              "group": "Observability",
              "pages": [
                "api/resources/event-destinations",
                "api/resources/event-sources",
                "api/resources/event-subscriptions"
              ]
            },
            {
              "group": "IAM",
              "pages": [
                "api/resources/ip-restrictions",
                "api/resources/api-keys",
                "api/resources/ssh-credentials",
                "api/resources/credentials",
                "api/resources/bot-users"
              ]
            },
            {
              "group": "SSH Certificates", 
              "pages": [
                "api/resources/ssh-certificate-authorities",
                "api/resources/ssh-host-certificates",
                "api/resources/ssh-user-certificates"
              ]
            },
            {
              "group": "Partners",
              "pages": ["api/resources/abuse-reports"]
            }
          ]
        }
      ]
    },
    
    // Errors - major section
    {
      "group": "Errors",
      "pages": [
        "errors/index", // Overview from link
        "errors/reference"
      ]
    },
    
    // Guides section
    {
      "group": "API Gateway", 
      "pages": [
        "guides/api-gateway/get-started",
        "guides/api-gateway/kubernetes",
        "guides/api-gateway/multicloud",
        "guides/api-gateway/monitor-ngrok"
      ]
    },
    {
      "group": "Device Gateway",
      "pages": autoPages['guides/device-gateway']
    },
    {
      "group": "Identity Aware Proxy",
      "pages": autoPages['guides/identity-aware-proxy']
    },
    {
      "group": "Security Best Practices",
      "pages": [
        "guides/security-dev-productivity/index", // Overview from link
        "guides/security-dev-productivity/securing-your-tunnels",
        "guides/security-dev-productivity/hipaa-compliance"
      ]
    },
    {
      "group": "Site-to-Site Connectivity",
      "pages": [
        "guides/site-to-site-connectivity/index", // Overview from link
        "guides/site-to-site-connectivity/end-customers"
      ]
    },
    "guides/running-behind-firewalls",
    "guides/ssh-rdp/index",
    {
      "group": "Using ngrok with", 
      "pages": autoPages['using-ngrok-with']
    },
    {
      "group": "Integrations",
      "pages": [
        "integrations/index", // Overview from link
        ...autoPages['integrations']
      ]
    }
  ];

  return {
    "$schema": "https://mintlify.com/docs.json",
    "theme": "mint",
    "name": "ngrok Documentation", 
    "colors": {
      "primary": "#ff0000"
    },
    "navigation": {
      "pages": rootPages,
      "groups": groups
    }
  };
}

/**
 * Main function to rebuild docs.json
 */
function rebuildDocsJson() {
  const docsJsonPath = path.join(__dirname, 'docs', 'docs.json');
  
  console.log('🔍 Scanning autogenerated directories...');
  const newDocsJson = buildCompleteDocsJson();
  
  // Write the new docs.json
  fs.writeFileSync(docsJsonPath, JSON.stringify(newDocsJson, null, 2));
  console.log('✅ docs.json completely rebuilt to match sidebar-example.js structure!');
  
  // Show summary
  const autoPages = getAutoPages();
  console.log('\n📊 Auto-generated pages included:');
  for (const [dir, pages] of Object.entries(autoPages)) {
    console.log(`  ${dir}: ${pages.length} items`);
  }
}

// Run if called directly
if (require.main === module) {
  rebuildDocsJson();
}

module.exports = { rebuildDocsJson, scanDirectory, getAutoPages };
